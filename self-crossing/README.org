* Self Crossing
** The Problem
   You are given an array ~x~ of ~n~ positive numbers. You start at point ~(0,0)~ and moves ~x[0]~ metres to the north, then ~x[1]~ metres to the west, ~x[2]~ metres to the south, ~x[3]~ metres to the east and so on. In other words, after each move your direction changes counter-clockwise.

   Write a one-pass algorithm with =O(1)= extra space to determine, if your path crosses itself, or not.

   #+begin_src artist :exports code
     ┌───┐
     │   │
     └───┼──>
     .   │
   #+end_src

   #+name: example-1-crossing
   | 2 | 1 | 1 | 2 |

   Expected Output: =true=

   #+begin_src artist :exports code
     ┌──────┐
     │      │
     │
     │
     └────────────>
   #+end_src

   #+name: example-2-no-crossing
   | 1 | 2 | 3 | 4 |

   Expected Output: =false=

   #+begin_src artist :exports code
     ┌────┐
     │    │
     │    │
     └─>  │
   #+end_src

   #+name: example-3-crossing
   | 2 | 2 | 2 | 1 |

   Expected Output: =true=
